Задания ansible-1
--------------------------------------------------------------------------------------------------------------------
1. После удаления директории reddit и повторном запуске плейбука clone.yml мы видим такой результат выполнения
changed=1 означает, что директория reddit была заново скопирована с git


PLAY RECAP *************************************************************************************************************
appserver                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

2. Реализована схема динамического инвентори с помощью скрипта inventory.py
Скрипт получает список хостов из yandex облака


dbserver | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
appserver | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
--------------------------------------------------------------------------------------------------------------------

Задания ansible-2
--------------------------------------------------------------------------------------------------------------------

1. Чтобы установить плагин для работы с yandex cloud необходимо скопировать файл yc_compute.py
в папку с установленным ansible ~/.local/lib/python3.8/site-packages/ansible/plugins/inventory.
Настройки для работы плагина находятся в файле yc_compute.yml.
keyed_groups позволяют динамически помещать виртуальные машины из yandex cloud в группы хостов для ansible

2. В папке packer изменены app.json, db.json. Теперь при сборке образа используются плейбуки packer_app.yml и packer_db.yml

Команда запуска установки приложения 
    ansible-playbook -i yc_compute.yml site.yml 






